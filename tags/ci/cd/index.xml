<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CI/CD on Peter&#39;s Blog</title>
    <link>http://localhost:8000/tags/ci/cd/</link>
    <description>Recent content in CI/CD on Peter&#39;s Blog</description>
    <image>
      <url>http://localhost:8000/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:8000/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator><atom:link href="http://localhost:8000/tags/ci/cd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:8000/posts/etcd/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:8000/posts/etcd/readme/</guid>
      <description>etcd 尝试 vagrant # -*- mode: ruby -*- # vi: set ft=ruby : servers = { :etcd1 =&amp;gt; &#39;192.168.1.21&#39;, :etcd2 =&amp;gt; &#39;192.168.1.22&#39;, :etcd3 =&amp;gt; &#39;192.168.1.23&#39; } Vagrant.configure(&amp;quot;2&amp;quot;) do |config| config.vm.box = &amp;quot;ubuntu/focal64&amp;quot; servers.each do |server_name, server_ip| config.vm.define server_name do |server_config| server_config.vm.hostname = &amp;quot;#{server_name.to_s}&amp;quot; server_config.vm.network :private_network, ip: server_ip server_config.vm.provider &amp;quot;virtualbox&amp;quot; do |vb| vb.name = server_name.to_s if vb.name == &amp;quot;etcd1&amp;quot; vb.memory = 1024 vb.cpus = 1 else vb.memory = 1024 vb.cpus = 1 end end end end end install install.</description>
    </item>
    
    <item>
      <title>TeamCity 搭建CI/CD</title>
      <link>http://localhost:8000/posts/teamcity/teamcity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:8000/posts/teamcity/teamcity/</guid>
      <description>Teamcity 搭建CI/CD install server
mkdir teamcity_server docker run -it --name teamcity-server-instance \  -v /home/ubuntu/teamcity_server/datadir:/data/teamcity_server/datadir \  -v /home/ubuntu/teamcity_server/logs:/opt/teamcity/logs \  -p 8111:8111 \  jetbrains/teamcity-server  agent, conf 有权限问题，最好在root运行 如果要使用docker-in-docker特性（sudo command not found），请使用linux-sudo tag的image  sudo docker run -it -e SERVER_URL=&amp;#34;http://10.200.160.4:8111&amp;#34; \  -u 0 \  -v docker_volumes:/var/lib/docker \  -v /var/run/docker.sock:/var/run/docker.sock \  -v /opt/buildagent/work:/opt/buildagent/work \  -v /opt/buildagent/temp:/opt/buildagent/temp \  -v /opt/buildagent/tools:/opt/buildagent/tools \  -v /opt/buildagent/plugins:/opt/buildagent/plugins \  -v /opt/buildagent/system:/opt/buildagent/system \  --privileged -e DOCKER_IN_DOCKER=start \  -v /home/ubuntu/teamcity_agent/conf:/data/teamcity_agent/conf \  jetbrains/teamcity-agent register agent agent 安装好后，在server UI/Agents 中进行认证授权。待agent就绪后，可以添加需要的项目和操作等。</description>
    </item>
    
  </channel>
</rss>
