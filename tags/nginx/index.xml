<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Nginx on Peter&#39;s Blog</title>
    <link>https://26huitailang.github.io/tags/nginx/</link>
    <description>Recent content in Nginx on Peter&#39;s Blog</description>
    <image>
      <title>Peter&#39;s Blog</title>
      <url>https://26huitailang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://26huitailang.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.134.2</generator>
    <language>en</language>
    <lastBuildDate>Wed, 10 Nov 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://26huitailang.github.io/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nginx</title>
      <link>https://26huitailang.github.io/posts/nginx/nginx/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://26huitailang.github.io/posts/nginx/nginx/</guid>
      <description>&lt;h1 id=&#34;nginx&#34;&gt;nginx&lt;/h1&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&#34;常用命令&#34;&gt;常用命令&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -s stop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nginx -s reload
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;h3 id=&#34;反向代理&#34;&gt;反向代理&lt;/h3&gt;
&lt;p&gt;一句话：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是正向代理？代理的是客户端&lt;/li&gt;
&lt;li&gt;什么是反向代理？代理的是服务器，客户端是无感知的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/physicsdandan/article/details/45667357&#34;&gt;nginx反向代理配置&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;正常情况：
client —(send request)—&amp;gt; server

代理情况：
client —(send request)—&amp;gt; clinet proxy –(send request)—&amp;gt; server

反向代理：
client -(send request)-&amp;gt; server proxy -(send request)-&amp;gt; other server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到反向代理并不是真的反过来，而是代理人的身份由客户端转向了服务端，也因为代理是在服务端，所以客户端是对此无感知的。&lt;/p&gt;
&lt;h3 id=&#34;负载均衡&#34;&gt;负载均衡&lt;/h3&gt;
&lt;p&gt;将原先集中请求到单个服务器的请求分发到多个服务器上，目的是为了支持服务横向扩展。&lt;/p&gt;
&lt;h3 id=&#34;动静分离&#34;&gt;动静分离&lt;/h3&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;h3 id=&#34;全局&#34;&gt;全局&lt;/h3&gt;
&lt;p&gt;配置文件开始到events之间的内容，主要是设置一些影响nginx运行的配置指令，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户（组）&lt;/li&gt;
&lt;li&gt;worker process数量&lt;/li&gt;
&lt;li&gt;进程pid存放路径&lt;/li&gt;
&lt;li&gt;日志存放路径和类型&lt;/li&gt;
&lt;li&gt;配置文件的引入&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;events&#34;&gt;events&lt;/h3&gt;
&lt;p&gt;配置nginx服务器与用户的网络连接，此部分对性能影响较大，应根据实际情况处理，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是否开启对多worker process下的网络连接进行序列化&lt;/li&gt;
&lt;li&gt;是否允许同时接受多个网络连接&lt;/li&gt;
&lt;li&gt;选取处理连接的事件驱动模型&lt;/li&gt;
&lt;li&gt;每个worker 支持的最大连接数等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;http&#34;&gt;http&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;全局配置&lt;/li&gt;
&lt;li&gt;server配置
&lt;ul&gt;
&lt;li&gt;全局&lt;/li&gt;
&lt;li&gt;location配置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;server-配置和匹配规则&#34;&gt;server 配置和匹配规则&lt;/h2&gt;
&lt;p&gt;一个http服务可以有多个server，而对server的路径匹配，反向代理都是在这里配置的。&lt;/p&gt;
&lt;p&gt;在server中最重要的一项配置：server_name的配置。server_name决定了来了一个url，到底是哪个server处理该请求。nginx会依次找和url配置的第一次出现的server。server_name可以使用通配符，也可以使用正则表达式。而且一个server的server_name可以多个，以空格分隔。更详细的关于server_name匹配规则，&lt;a href=&#34;http://nginx.org/en/docs/http/server_names.html&#34;&gt;参看这里&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
